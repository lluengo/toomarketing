@model BE.Template

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var etiquetas = (Dictionary<object, object>)Session["EtiquetasIDIOMA"];
}

<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/autocomplete.css" rel="stylesheet" />

<h2>Editar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Template</h4>
    <hr />

    <div class="form-group">
        @Html.Label(etiquetas["Nombre"].ToString(), htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("String 1", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.string1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.string1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("String 2", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.string2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.string2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("String 3", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.string3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.string3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("String 4", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.string4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.string4, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(etiquetas["Nombre"].ToString(), htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.nroTemplate, (IEnumerable<SelectListItem>)ViewBag.temp, "Seleccionar un template", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.nroTemplate, "", new { @class = "text-danger" })
        </div>
    </div>

    <p style="color:red"> @ViewBag.mensaje</p>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value=@etiquetas["Guardar"].ToString() class="btn btn-default" />
        </div>

        <div class="col-md-offset-2 col-md-10">
            <input type="button" id="vistaPrevia" value="Vista previa" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink(etiquetas["Volver"].ToString(), "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="/Scripts/jquery-ui-1.12.1.min.js"></script>
}
